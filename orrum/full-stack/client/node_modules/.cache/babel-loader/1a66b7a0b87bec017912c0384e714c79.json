{"ast":null,"code":"var _jsxFileName = \"/Users/akhil.parashara/Documents/myReactProjects/orrum/full-stack/client/src/Components/Table.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; //import {getInitialData} from '../datprovider'\n\nclass Table extends Component {\n  constructor() {\n    super();\n\n    this.call = () => {\n      console.log('Inside call');\n      axios.post('http://localhost:5000/start').then(resp => console.log('RESP->', resp));\n    };\n\n    this.updateData = data => {\n      var origPhoneMap = [...this.state.phoneMap];\n\n      if (origPhoneMap.length === 0) {\n        data.map(k => {\n          origPhoneMap.push(k);\n        });\n      } else {\n        for (var i = 0; i < origPhoneMap.length; i++) if (origPhoneMap[i].phoneNumber === data.phone) {\n          origPhoneMap[i].status = data.status;\n        }\n      }\n\n      this.setState({\n        phoneMap: origPhoneMap\n      });\n    };\n\n    this.fetchData = () => {\n      axios.get(this.API_URL + '/').then(resp => this.updateData(resp.data));\n    };\n\n    this.state = {\n      showButton: 'true',\n      phoneMap: []\n    };\n    this.API_URL = 'http://localhost:5000';\n    this.call = this.call.bind(this);\n    this.updateData = this.updateData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    var eventSource = new EventSource(+'');\n\n    eventSource.onmessage = e => this.updateData(JSON.parse(e.data));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \"Status\")), this.state.phoneMap.map(k => /*#__PURE__*/React.createElement(\"tr\", {\n      key: k.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }\n    }, k.phoneNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, k.status))))), this.state.showButton ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.call,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, \"Call \") : null);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/myReactProjects/orrum/full-stack/client/src/Components/Table.js"],"names":["React","Component","axios","Table","constructor","call","console","log","post","then","resp","updateData","data","origPhoneMap","state","phoneMap","length","map","k","push","i","phoneNumber","phone","status","setState","fetchData","get","API_URL","showButton","bind","componentDidMount","eventSource","EventSource","onmessage","e","JSON","parse","render","id"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport axios from 'axios'\n//import {getInitialData} from '../datprovider'\n\nclass Table extends Component {\n    constructor() {\n        super()\n        this.state={\n            showButton: 'true',\n            phoneMap: []\n        } \n        this.API_URL='http://localhost:5000'\n        this.call = this.call.bind(this)\n        this.updateData = this.updateData.bind(this)\n        this.fetchData=this.fetchData.bind(this)\n\n    }\n    call = () => {\n        console.log('Inside call')\n        axios.post('http://localhost:5000/start')\n        .then(resp=>console.log('RESP->',resp))\n    }\n    \n    updateData = (data) => {\n        var origPhoneMap = [...this.state.phoneMap]\n        if (origPhoneMap.length === 0) {\n            data.map(k => {\n                origPhoneMap.push(k)\n            })\n        }\n        else {\n            for (var i = 0; i < origPhoneMap.length; i++)\n            if (origPhoneMap[i].phoneNumber === data.phone) {\n                origPhoneMap[i].status=data.status\n            }  \n        }\n        this.setState({phoneMap:origPhoneMap})\n        }        \n    \n    fetchData = () => {\n        axios.get(this.API_URL + '/')\n            .then(resp=> this.updateData(resp.data))\n      \n    }\n\n    componentDidMount() {\n       this.fetchData()\n        var eventSource = new EventSource(+'');\n       eventSource.onmessage = (e) => this.updateData(JSON.parse(e.data));\n       \n    }\n\n\n    render() {\n        return (\n            <div>\n            <table >\n                <tbody>\n                <tr>\n        <th>Phone Number</th>\n        <th>Status</th>\n                    </tr>\n                    {this.state.phoneMap.map(k => (\n                         <tr key={k.id}>\n                         <td>{k.phoneNumber}</td>\n                        <td>{k.status}</td>\n                       \n              </tr>\n                    ))}\n       \n \n                </tbody>\n  \n                </table>\n                {this.state.showButton? <button onClick={this.call}>Call </button> :null}\n                \n                </div>\n        )\n    }\n}\nexport default Table"]},"metadata":{},"sourceType":"module"}